version: "3.8"

services:
  dev_prometheus:
    build: ./prometheus
    image: teamf-dev_prometheus
    container_name: dev_prometheus_container
    ports:
      - "9090:9090"
    networks:
      - mybridge
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.enable-lifecycle"

  dev_node-exporter:
    image: prom/node-exporter
    container_name: dev_node_exporter_container
    ports:
      - "9100:9100"
    networks:
      - mybridge

  dev_grafana:
    image: grafana/grafana
    container_name: dev_grafana_container
    volumes:
      - /hostpath/provisioning:/etc/provisioning
      - grafana_data:/var/lib/grafana
    ports:
      - 9000:3000
    networks:
      - mybridge

  dev_cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: dev_cadvisor_container
    ports:
      - "8080:8080"  # cAdvisor의 웹 인터페이스에 접근하기 위한 포트
    volumes:
      - /etc/machine-id:/etc/machine-id:ro
      - /:/rootfs:ro  # 호스트 시스템의 루트 디렉토리를 읽기 전용으로 마운트
      - /var/run:/var/run:rw  # Docker 소켓 위치
      - /sys:/sys:ro  # 시스템 정보를 읽기 위한 마운트
      - /var/lib/docker/:/var/lib/docker:ro  # Docker 이미지와 컨테이너 정보
    networks:
      - mybridge

  dev_backend:
    build: ./backend
    container_name: dev_backend_container
    ports:
      - "3001:3000"
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
    networks:
      - mybridge

  dev_frontend:
    build: ./frontend
    container_name: dev_frontend_container
    ports:
      - "5001:5000"
    networks:
      - mybridge

  dev_nginx:
    build: ./nginx
    container_name: dev_nginx_container
    # restart: always
    ports:
      - "80"
      - "443:443"
    volumes:
      - /hostpath/www:/var/www/html
      - /hostpath/certbot/etc:/etc/letsencrypt:ro
    depends_on:
      - dev_backend
      - dev_frontend
    networks:
      - mybridge

  certbot:
    image: certbot/certbot
    volumes:
      - /hostpath/certbot/etc:/etc/letsencrypt
      - /hostpath/certbot/var:/var/lib/letsencrypt
      - /hostpath/www:/var/www/html
    command: certonly --webroot --webroot-path=/var/www/html --email tjfgkssk9472@gmail.com --agree-tos --no-eff-email --force-renewal -d tairot.online -v
    networks:
      - mybridge
    depends_on:
      - nginx

volumes:
  grafana_data:

networks:
  mybridge:
    ipam:
      driver: default
      config:
        - subnet: 172.202.0.1/16
